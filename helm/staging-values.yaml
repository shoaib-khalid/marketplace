affinity: {}
autoscaling:
  enabled: false
  maxReplicas: 100
  minReplicas: 1
  targetCPUUtilizationPercentage: 80
configProdJson:
  configmap:
    config.prod.json: |
      {
          "env": {
              "name": "dev"
          },
          "apiServer": {
              "flowBuilderService"  : "https://api.symplified.it/flow-builder/v1",
              "userService"         : "https://api.symplified.services/user-service/v1",
              "productService"      : "https://api.symplified.it/product-service/v1",
              "orderService"        : "https://api.symplified.it/order-service/v1",
              "reportService"       : "https://api.symplified.it/report-service/v1",
              "deliveryService"     : "https://api.symplified.it/delivery-service/v1",
              "paymentService"      : "https://api.symplified.it/payment-service/v1"
          },
          "storeFrontDomain"          : ".symplified.services",
          "marketplaceDomain"         : "customer.symplified.services",
          "merchantPortalDomain"      : "merchant.symplified.it",
          "logging": 0
      }
  volumeMount:
  - mountPath: /usr/local/apache2/htdocs/assets/config/config.prod.json
    name: marketplace-vol
    subPath: config.prod.json
  volumes:
  - configMap:
      name: marketplace-cm
    name: marketplace-vol
fullnameOverride: ""
image:
  pullPolicy: Always
  repository: kalsym/marketplace
  tag: 0.0.3
imagePullSecrets:
- name: kalsym-docker-hub
ingress:
  annotations: {}
  className: ""
  enabled: true
  hosts:
  - host: customer.symplified.services
    paths:
    - path: /
      pathType: ImplementationSpecific
  - host: customer2.symplified.services
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls:
  - hosts:
    - customer.symplified.services
    secretName: secret-tls-services
  - hosts:
    - customer2.symplified.services
    secretName: secret-tls-services
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
replicaCount: 1
resources: {}
securityContext: {}
service:
  port: 80
  type: ClusterIP
serviceAccount:
  annotations: {}
  create: false
  name: ""
tolerations: []